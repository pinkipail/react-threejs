{"version":3,"sources":["Slider/SliderNav/SliderNavBullet/SliderNavBullet.js","Slider/SliderNav/SliderNav.js","Slider/Slider.js","components/AnimatingDistortion/AnimatingDistortion.js","Navigation/Navigation.js","components/FilterEffect/FilterEffect.js","About/About.js","components/Logo/Logo.js","Portfolio/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["num","idx","handlerClick","inputRef","className","ref","el","onClick","props","bullets","i","countSlides","push","src","alt","map","bullet","key","Slider","boundsСhecking","value","sliderState","total","enteringAnimating","listeners","TweenMax","fromTo","textLine","yPercent","ease","delay","alpha","forEach","bulletsText","children","bulletsLine","set","transformOrigin","currient","scale","mat","uniforms","texture1","initTexture","texture2","textures","animatingBackground","exitingAnimating","removeListeners","estimationDirection","next","cameraSetup","camera","THREE","offsetWidth","offsetHeight","lookAt","scene","position","z","animating","direction","changeTexture","animatingText","animatingBullet","time","to","dispPower","onStart","onUpdate","rend","onComplete","tl","TimelineMax","paused","call","rerender","play","nextSlide","changeSizeWindow","renderer","setSize","handlerScroll","indicator","WheelIndicator","callback","e","window","addEventListener","removeEventListener","destroy","render","inner","slidesTexts","text","images","innerWidth","innerHeight","initBg","forceUpdate","length","initial","slide","width","screen","height","console","log","this","sceneSetup","loadTextures","createMesh","texture","load","minFilter","generateMipmaps","setPixelRatio","devicePixelRatio","appendChild","domElement","loader","image","index","disp","magFilter","wrapS","wrapT","type","intensity","res","size","transparent","vertexShader","fragmentShader","geometry","mesh","add","Component","AnimatingDistortion","componentDidMount","initEvents","animated","feDisplacementMap","baseVal","primitiveValues","initFilter","filterId","document","querySelector","createTimeline","animation","line","style","filter","img","duration","startAt","y","param","onMouseEnter","restart","links","link","path","exact","id","baseFrequency","numOctaves","result","xChannelSelector","yChannelSelector","in","in2","ScrollMagicPluginGsap","ScrollMagic","About","bg","about","title","xPercent","from","letterSpacing","autoRound","whiteSpace","href","data","aria-label","Portfolio","elem","refItems","refItemsBg","content","description","features","scroll","ctrl","item","triggerElement","triggerHook","setTween","addTo","feature","sliderRef","React","createRef","portfolioRef","aboutRef","ruContent","lang","nav","enContent","useState","setContent","routes","Сomponent","refComponent","timeout","appear","enter","exit","Fragment","route","match","CSSTransition","classNames","onEntered","current","classList","onExit","remove","unmountOnExit","FilterEffect","Boolean","location","hostname","app","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4cf7d4aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SliderNavBullet.css'\r\n\r\nexport default function({num, idx, handlerClick, inputRef}) {\r\n    return(\r\n        <div className=\"slider-bullet\" ref={(el)=>inputRef(el, idx)}>\r\n          <span className=\"slider-bullet__text\" onClick={()=>{handlerClick(idx)}}>{num}</span>\r\n          <span className=\"slider-bullet__line\"></span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './SliderNav.css'\r\nimport SliderNavBullet from './SliderNavBullet/SliderNavBullet';\r\n\r\nexport default function(props) {\r\n    const bullets = []\r\n    for(let i = 1; i <= props.countSlides; i++)\r\n      bullets.push(i)\r\n\r\n    return(\r\n        <nav className=\"slider-nav\" >\r\n            <div className=\"arrow arrow_up\" onClick={()=>{props.handlerClick('up')}}>\r\n              <img src=\"./img/arrow.svg\" alt=\"scroll\"/>\r\n            </div>\r\n\r\n            {bullets.map((bullet, idx) => \r\n                <SliderNavBullet  \r\n                  inputRef={props.inputRef}\r\n                  num={`0${idx+1}`} \r\n                  idx={idx} key={idx} \r\n                  handlerClick={props.handlerClick} \r\n                />\r\n            )}\r\n\r\n            <div className=\"arrow arrow_down\">\r\n              <img src=\"./img/arrow.svg\" alt=\"scroll\" onClick={()=>{props.handlerClick('down')}}/>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","/* eslint-disable no-restricted-globals */\r\nimport React, { Component } from \"react\"\r\nimport * as THREE from \"three\"\r\nimport {TweenMax, TimelineMax} from \"gsap\"\r\nimport WheelIndicator from \"wheel-indicator\"\r\nimport './Slider.scss'\r\nimport SliderNav from \"./SliderNav/SliderNav\"\r\n\r\n\r\n\r\nexport default class Slider extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        const horizImages = [\r\n            './img/bg/bg1.jpg',\r\n            './img/bg/bg2.jpg',\r\n            './img/bg/bg3.jpg',\r\n            './img/bg/bg4.jpg'\r\n        ]\r\n        const vertImages = [\r\n            './img/bg/v_bg1.jpg',\r\n            './img/bg/v_bg2.jpg',\r\n            './img/bg/v_bg3.jpg',\r\n            './img/bg/v_bg4.jpg'\r\n        ]\r\n\r\n        this.images = (window.innerWidth/window.innerHeight > 0.9? horizImages: vertImages)\r\n\r\n        \r\n        this.initBg = './img/bg/bg-dark.png'\r\n        \r\n\r\n\r\n        this.textLine = []\r\n        this.bullets = []\r\n        this.bulletsText = []\r\n        this.bulletsLine = []\r\n        this.rerender = ()=>{\r\n            this.forceUpdate()\r\n        }\r\n\r\n        this.sliderState = {\r\n            total: this.images.length - 1,\r\n            currient: 0,\r\n            next: 0,\r\n            animating: false,\r\n            initial: true\r\n        }\r\n        this.slide = []\r\n\r\n    }\r\n\r\n    boundsСhecking = (value) => {       \r\n        if(value > this.sliderState.total) \r\n            return 0 \r\n        if(value < 0)\r\n            return this.sliderState.total\r\n        return value\r\n    }\r\n\r\n\r\n    componentDidMount() {     \r\n        const width = screen.width; // ширина  \r\n        const height = screen.height; // высота\r\n        console.log(width, height);\r\n        this.sceneSetup()\r\n        this.cameraSetup()\r\n        this.loadTextures()\r\n        this.createMesh()\r\n        this.rend()\r\n        TweenMax.set(this.el, {alpha: 0})\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('ds');\r\n        \r\n        this.removeListeners()\r\n    }\r\n\r\n\r\n    initTexture() {\r\n        const loader = new THREE.TextureLoader()\r\n        const texture = loader.load('./img/bg/bg-dark.png', this.rend)\r\n        texture.minFilter = THREE.LinearFilter\r\n        texture.generateMipmaps = false\r\n        return texture\r\n    }\r\n    enteringAnimating = ()=>{\r\n        this.listeners() \r\n        TweenMax.fromTo(this.textLine, 2, {yPercent: 110}, {yPercent: 0, ease: 'power3.out', delay: 0.5})\r\n        TweenMax.fromTo(this.el, 2, {alpha: 0}, {alpha: 1})\r\n\r\n        this.bullets.forEach((bullet, idx) => {\r\n            this.bulletsText[idx] = bullet.children[0]\r\n            this.bulletsLine[idx] = bullet.children[1]\r\n            TweenMax.set(this.bulletsLine[idx], {transformOrigin: 'right'})\r\n      \r\n            if (idx !== this.sliderState.currient){\r\n                TweenMax.set(this.bulletsText[idx], {alpha: 0.5, scale: 0.75})\r\n                TweenMax.set(this.bulletsLine[idx], {alpha: 0.5, scale: 0.75})\r\n            }\r\n            \r\n        })\r\n            this.mat.uniforms.texture1.value = this.initTexture()\r\n            this.mat.uniforms.texture2.value = this.textures[this.sliderState.currient]\r\n            this.animatingBackground(1, 2, 'power2.out')\r\n    }\r\n\r\n    exitingAnimating = ()=>{\r\n        this.removeListeners()\r\n        TweenMax.fromTo(this.textLine, 2, {yPercent: 0}, {yPercent: 110, ease: 'power3.out', delay: 0.5})\r\n        TweenMax.fromTo(this.el, 2, {alpha: 1}, {alpha: 0, ease: 'power2.in'})\r\n            this.mat.uniforms.texture1.value = this.textures[this.sliderState.currient]\r\n            this.mat.uniforms.texture2.value = this.initTexture()\r\n            this.animatingBackground(1, 2, 'power2.in')\r\n    }\r\n    estimationDirection = () => {       \r\n        if(this.sliderState.currient < this.sliderState.next)\r\n            return 1\r\n        else \r\n            return -1\r\n        \r\n    } \r\n\r\n    cameraSetup = () => {\r\n        this.camera = new THREE.OrthographicCamera(\r\n            this.el.offsetWidth / -2,\r\n            this.el.offsetWidth / 2,\r\n            this.el.offsetHeight / 2,\r\n            this.el.offsetHeight / -2,\r\n            1,\r\n            1000\r\n        )\r\n        this.camera.lookAt(this.scene.position)\r\n        this.camera.position.z = 1\r\n    }\r\n\r\n    sceneSetup() {\r\n        this.scene = new THREE.Scene()\r\n\r\n        this.renderer = new THREE.WebGLRenderer({alpha: true})\r\n        this.renderer.setPixelRatio(window.devicePixelRatio)\r\n        this.renderer.setSize(this.el.offsetWidth, this.el.offsetHeight)\r\n\r\n        this.inner.appendChild(this.renderer.domElement)\r\n    }\r\n\r\n    loadTextures() {\r\n        const loader = new THREE.TextureLoader()\r\n\r\n        this.textures = []\r\n        this.images.forEach((image, index) => {\r\n            const texture = loader.load(image, this.rend)\r\n            texture.minFilter = THREE.LinearFilter\r\n            texture.generateMipmaps = false\r\n            this.textures.push(texture)\r\n        })\r\n\r\n        this.disp = loader.load('https://s3-us-west-2.amazonaws.com/s.cdpn.io/58281/rock-_disp.png', this.render)\r\n        this.disp.magFilter = this.disp.minFilter = THREE.LinearFilter\r\n        this.disp.wrapS = this.disp.wrapT = THREE.RepeatWrapping\r\n    }\r\n\r\n    createMesh() {\r\n        this.mat = new THREE.ShaderMaterial({\r\n            uniforms: {\r\n                dispPower: {type: 'f', value: 0.0},\r\n                intensity: {type: 'f', value: 0.5},\r\n                direction:{type: 'f', value: 1},\r\n                res: {value: new THREE.Vector2(window.innerWidth, window.innerHeight)},\r\n                size: {value: new THREE.Vector2(1, 1)},\r\n                texture1: {type: 't', value: this.textures[0]},\r\n                texture2: {type: 't',value: this.textures[1]},\r\n                disp: {type: 't', value: this.disp}},\r\n            transparent: false,\r\n            vertexShader: `\r\n            varying vec2 vUv;\r\n            void main() {\r\n              vUv = uv;\r\n              gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n            }\r\n            `,\r\n            fragmentShader: `\r\n            varying vec2 vUv;\r\n        \r\n            uniform sampler2D texture1;\r\n            uniform sampler2D texture2;\r\n            uniform sampler2D disp;\r\n        \r\n            uniform float dispPower;\r\n            uniform float intensity;\r\n            uniform float direction;\r\n        \r\n            uniform vec2 size;\r\n            uniform vec2 res;\r\n        \r\n            vec2 backgroundCoverUv( vec2 screenSize, vec2 imageSize, vec2 uv ) {\r\n              float screenRatio = screenSize.x / screenSize.y;\r\n              float imageRatio = imageSize.x / imageSize.y;\r\n              vec2 newSize = screenRatio < imageRatio \r\n                  ? vec2(imageSize.x * (screenSize.y / imageSize.y), screenSize.y)\r\n                  : vec2(screenSize.x, imageSize.y * (screenSize.x / imageSize.x));\r\n              vec2 newOffset = (screenRatio < imageRatio \r\n                  ? vec2((newSize.x - screenSize.x) / 2.0, 0.0) \r\n                  : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\r\n              return uv * screenSize / newSize + newOffset;\r\n            }\r\n        \r\n            void main() {\r\n              vec2 uv = vUv;\r\n        \r\n              vec4 disp = texture2D(disp, uv);\r\n              vec2 dispVec = vec2(disp.x, disp.y);\r\n        \r\n              vec2 distPos1 = uv + (dispVec * intensity * dispPower)*direction;\r\n              vec2 distPos2 = uv + (dispVec * -(intensity * (1.0 - dispPower)))*direction;\r\n        \r\n              vec4 _texture1 = texture2D(texture1, distPos1);\r\n              vec4 _texture2 = texture2D(texture2, distPos2);\r\n        \r\n              gl_FragColor = mix(_texture1, _texture2, dispPower);\r\n            }\r\n            `\r\n        })\r\n\r\n        const geometry = new THREE.PlaneBufferGeometry(\r\n            this.el.offsetWidth,\r\n            this.el.offsetHeight,\r\n            1\r\n        )\r\n      \r\n        const mesh = new THREE.Mesh(geometry, this.mat)\r\n        this.scene.add(mesh)\r\n    }\r\n    animating = () =>  {        \r\n        const direction = this.estimationDirection()\r\n        this.changeTexture()\r\n        this.animatingBackground(direction)\r\n        this.animatingText(direction)  \r\n        this.animatingBullet()\r\n    }\r\n\r\n\r\n    animatingBackground = (direction = 1, time = 2.5, ease = 'expo.inOut') => {\r\n\r\n        this.sliderState.animating = true \r\n        TweenMax.to(this.mat.uniforms.dispPower, time, {\r\n            value: 1,\r\n            ease: ease,\r\n            onStart: () => {\r\n                this.mat.uniforms.direction.value = direction\r\n            },\r\n            onUpdate: this.rend,\r\n            onComplete: () => {\r\n                this.mat.uniforms.dispPower.value = 0.0\r\n                this.sliderState.animating = false     \r\n            }\r\n        })\r\n\r\n    }\r\n    animatingText = (direction)=>{\r\n        const tl = new TimelineMax({paused: true})        \r\n        tl.fromTo(this.textLine, 2, {yPercent: 0}, {yPercent: -110*direction, ease: 'power4.inOut'}, 0)\r\n        tl.call((direction)=>{\r\n            this.rerender()\r\n            TweenMax.fromTo(this.textLine, 2, {yPercent: 110*direction}, {yPercent: 0, ease: 'power3.out'})\r\n        }, [direction], 1.5)\r\n\r\n        tl.play()\r\n    }\r\n\r\n\r\n\r\n    animatingBullet = ()=>{\r\n        const tl = new TimelineMax({paused: true})\r\n\r\n        tl.to([\r\n              this.bulletsText[this.sliderState.currient], \r\n              this.bulletsLine[this.sliderState.currient]], \r\n              0.5, {alpha: 0.5, scale: 0.75}, 0)\r\n          .to([\r\n              this.bulletsText[this.sliderState.next], \r\n              this.bulletsLine[this.sliderState.next]], \r\n              0.5, {alpha: 1, scale: 1}, 1)\r\n        tl.play()\r\n    }\r\n\r\n    nextSlide = (next) => {\r\n        if (this.sliderState.animating) return\r\n        \r\n        if(next === 'up')\r\n            next = this.sliderState.next - 1\r\n        if(next === 'down')\r\n            next = this.sliderState.next + 1\r\n\r\n        if (next === this.sliderState.currient) return\r\n\r\n        this.sliderState.animating = true\r\n        this.sliderState.next = this.boundsСhecking(next)\r\n        this.animating()\r\n        this.sliderState.currient = this.boundsСhecking(next)\r\n    }\r\n\r\n    changeTexture() {\r\n        this.mat.uniforms.texture1.value = this.textures[this.sliderState.currient]\r\n        this.mat.uniforms.texture2.value = this.textures[this.sliderState.next]\r\n    }\r\n\r\n    changeSizeWindow = () => {\r\n        this.changeTexture()\r\n        this.renderer.setSize(this.el.offsetWidth, this.el.offsetHeight)\r\n        this.rend()\r\n    }\r\n\r\n    handlerScroll = () => {\r\n        this.indicator = new WheelIndicator({\r\n            callback: (e) => {\r\n                if (e.direction === 'down')\r\n                    this.nextSlide(this.sliderState.currient + 1)\r\n                else\r\n                    this.nextSlide(this.sliderState.currient - 1)\r\n            }\r\n        })\r\n    }\r\n\r\n    listeners = ()=> {\r\n        window.addEventListener('resize', this.changeSizeWindow)\r\n        this.handlerScroll()\r\n    }\r\n    removeListeners = ()=> {\r\n        window.removeEventListener(\"resize\", this.changeSizeWindow);\r\n        this.indicator.destroy()\r\n    }\r\n    rend = () => {\r\n        this.renderer.render(this.scene, this.camera)\r\n    }\r\n\r\n    \r\n    render = () => {\r\n        return (\r\n            <div className=\"slider page\" ref={ref => (this.el = ref)}>\r\n         \r\n                <div className=\"slider__inner\" ref={ref => this.inner = ref}></div>\r\n                <div className=\"slide-text\">\r\n                    {this.props.slidesTexts[this.sliderState.next].map((text,idx) => \r\n                        <div className=\"slide-text-line\" key={idx}>\r\n                            <div ref={ref => (this.textLine[idx] = ref)}>\r\n                                {text}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>     \r\n\r\n                <SliderNav  \r\n                    inputRef={(el,idx) => this.bullets[idx] = el}\r\n                    countSlides={this.sliderState.total + 1} \r\n                    handlerClick={this.nextSlide}\r\n                />\r\n\r\n                <div className=\"scroll\">\r\n                    scroll\r\n                </div>\r\n                <div className=\"copyright\">\r\n                  Copyright 2020 by Twenty-Seventh. All rights reserved.\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component} from 'react';\r\nimport './AnimatingDistortion.scss';\r\nimport { TimelineMax } from 'gsap/gsap-core';\r\n\r\nclass AnimatingDistortion extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.props = props\r\n        \r\n        this.animation = {\r\n            text: props.param.text,\r\n            line: props.param.line,\r\n            img: props.param.img,\r\n        }\r\n        \r\n    }\r\n    componentDidMount = () => {\r\n        this.initEvents()\r\n    }\r\n\r\n    animated = () => {\r\n        this.feDisplacementMap.scale.baseVal = this.primitiveValues.scale\r\n    }\r\n\r\n    initFilter = () => {\r\n        this.filterId = '#filter'\r\n        this.feDisplacementMap = document.querySelector(`${this.filterId} > feDisplacementMap`)\r\n        this.primitiveValues = {scale: 0}\r\n    }\r\n\r\n    createTimeline = () => {\r\n        const tl = new TimelineMax({\r\n            paused: true,\r\n            onStart: () => {\r\n                if (this.animation.line)\r\n                    this.line.style.filter = `url(${this.filterId}` \r\n                if (this.animation.text)\r\n                    this.text.style.filter = `url(${this.filterId}`\r\n                if (this.animation.img)\r\n                    this.img.style.filter = `url(${this.filterId})`\r\n            },\r\n            onUpdate: () => {\r\n                this.animated()\r\n            },\r\n            onComplete: () => {\r\n                if (this.animation.line)\r\n                    this.line.style.filter = 'none'\r\n                if (this.animation.text)\r\n                    this.text.style.filter = 'none'\r\n                if (this.animation.img)\r\n                    this.img.style.filter = 'none'\r\n            }\r\n        })\r\n\r\n        tl.to(this.primitiveValues, { \r\n            duration: 0.7,\r\n            startAt: {scale: 40},\r\n            ease: \"rough({ template: none.out, strength: 2, points: 120, taper: 'none', randomize: true, clamp: false})\",\r\n            scale: 0\r\n        }, 0)\r\n\r\n        if (this.line)\r\n            tl.to(this.line, { \r\n                duration: 0.7,\r\n                startAt: {y: -5},\r\n                ease: 'Expo.easeOut',\r\n                y: 0\r\n            }, 0)\r\n        return tl\r\n    }\r\n\r\n    initEvents = () => {\r\n        this.initFilter()\r\n        this.tl = this.createTimeline()\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.animation.line)\r\n            return(\r\n                <span className='distorted-link' \r\n                    onMouseEnter={()=>{this.tl.restart()}}\r\n                >\r\n                    {this.props.children}\r\n                    <span className='distorted-link-deco' ref={ref => (this.line = ref)}></span>\r\n                </span>\r\n            )\r\n        if(this.animation.img){\r\n            return(\r\n                <div \r\n                    ref={ref => (this.img = ref)}\r\n                    onMouseEnter={()=>{this.tl.restart()}} \r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n        if(this.animation.text){\r\n\r\n            return(\r\n                <div className={this.props.children.props.className}\r\n                    ref={ref => (this.text = ref)}\r\n                    onMouseEnter={()=>{this.tl.restart()}}\r\n                >\r\n                    {this.props.children.props.children}\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nexport default AnimatingDistortion","import React from 'react';\r\nimport './Navigation.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nimport AnimatingDistortion from '../components/AnimatingDistortion/AnimatingDistortion';\r\n\r\nexport default function({links}){    \r\n  return(\r\n    <nav className=\"nav nav-left js-nav\">\r\n        <ul>\r\n            {links.map((link, idx)=>\r\n                <li key={idx}>\r\n                    <NavLink to={link.path} exact>\r\n                        <AnimatingDistortion param={{line:true}}>\r\n                            {link.text}\r\n                        </AnimatingDistortion>\r\n                    </NavLink>\r\n                </li>\r\n            )}\r\n\r\n        </ul>\r\n    </nav>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function(){\r\n    return(\r\n        <svg className=\"hidden\">\r\n          <filter id=\"filter\">\r\n            <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.01 0.7\" numOctaves=\"5\" result=\"warp\" />\r\n            <feDisplacementMap xChannelSelector=\"R\" yChannelSelector=\"G\" scale=\"0\" in=\"SourceGraphic\" in2=\"warp\" />\r\n          </filter>\r\n      </svg>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './About.css';\r\n\r\nimport * as ScrollMagic from \"scrollmagic\"; // Or use scrollmagic-with-ssr to avoid server rendering problems\r\nimport { TweenMax, TimelineMax } from \"gsap\"; // Also works with TweenLite and TimelineLite\r\nimport { ScrollMagicPluginGsap } from \"scrollmagic-plugin-gsap\";\r\n\r\nScrollMagicPluginGsap(ScrollMagic, TweenMax, TimelineMax);\r\n\r\nexport default class About extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.bg = null\r\n        this.about = null\r\n        this.title = null\r\n    }\r\n\r\n    enteringAnimating(){\r\n        TweenMax.fromTo(this.about, 1, {alpha:0, xPercent: 100}, {alpha:1,xPercent: 0, ease: 'power1.out'}) \r\n        TweenMax.fromTo(this.bg, 1, {alpha:0}, {alpha:1, ease: 'power1.in'}) \r\n        TweenMax.from(this.title, 1, {letterSpacing: '50px',autoRound: false, whiteSpace: 'nowrap'}) \r\n      } \r\n      exitingAnimating(){\r\n        TweenMax.fromTo(this.about, 1, {xPercent: 0}, {xPercent: -100}) \r\n        TweenMax.fromTo(this.bg, 1, {alpha:1}, {alpha:0}) \r\n      } \r\n    render(){\r\n        return(\r\n            <div className=\"about page\" ref={(el)=> this.bg = el}>\r\n          \r\n                <div className=\"about-content\" ref={(el)=> this.about = el}> \r\n                <div className=\"about-content__title\" ref={(el)=> this.title = el}>\r\n                    Немного обо мне:\r\n                </div>\r\n                <div className=\"about-image\">\r\n                   <img src='/img/photo.jpg' alt='myphoto'></img>\r\n                </div>\r\n                    Я вырос в небольшой деревни\r\n                    Новоегорьевское, что \r\n                    в Алтайском крае. <br/>\r\n                <div className=\"about-image\">\r\n                   <img src='/img/map.jpg' alt='myphoto'></img>\r\n                </div>\r\n                    В настоящее время живу,\r\n                    учусь и работаю в городе Калуга.<br/><br/>\r\n    \r\n                    Программированием увлекался\r\n                    ещё в старших классах, \r\n                    как и многие начинал с Pascal, \r\n                    в университете продолжил изучение.<br/><br/>     \r\n                    \r\n                    Сейчас активно развиваюсь в web-разработке, \r\n                    люблю работать с React \r\n                    и другими модными фреймворками.<br/> <br/> \r\n    \r\n                    Если хотите пообщатся<br/> \r\n                    со мной, почта для связи:<br/>\r\n                    <a href='info@mailto:vasiliy.fedorov'>info@vasiliy-fedorov.ru</a><br/>\r\n                </div>\r\n\r\n                <div className=\"copy-right\">\r\n                  Copyright 2020 by Twenty-Seventh. All rights reserved.\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Logo.css';\r\nimport AnimatingDistortion from '../AnimatingDistortion/AnimatingDistortion';\r\n\r\nexport default function(){\r\n    return(\r\n        <div className=\"logo\">\r\n            <AnimatingDistortion param={{img:true}}>\r\n                <object  data=\"./img/logo.svg\" aria-label='logo'/>\r\n            </AnimatingDistortion>\r\n        </div> \r\n    )\r\n}","import React, { Fragment, Component } from 'react';\r\nimport './Portfolio.css';\r\n\r\nimport * as ScrollMagic from \"scrollmagic\"; // Or use scrollmagic-with-ssr to avoid server rendering problems\r\nimport { TweenMax, TimelineMax } from \"gsap\"; // Also works with TweenLite and TimelineLite\r\nimport { ScrollMagicPluginGsap } from \"scrollmagic-plugin-gsap\";\r\n\r\nScrollMagicPluginGsap(ScrollMagic, TweenMax, TimelineMax);\r\n\r\nexport default class Portfolio extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.bg = null\r\n        this.elem = null\r\n        this.title = null\r\n        this.refItems = []\r\n        this.refItemsBg = []\r\n        this.content = [\r\n            {\r\n                title: 'Shoping List',\r\n                description: 'SPA созданное для закрепления навыков работы с  Redux',\r\n                link: 'pinkipail.github.io/JavaScript',\r\n                features: ['React.js', 'Redux.js', 'Webpack']\r\n            },\r\n            {\r\n                title: `Служба санитарной обработки в Калуге`,\r\n                description: 'Лендинг для компании',\r\n                link: 'disinsector40.ru',\r\n                features: ['Адаптивность', 'Косс-браузерность', 'PHP', 'AJAX']\r\n            },\r\n            {\r\n                title: 'Vasiliy Fedorov | Web Developer ',\r\n                description: 'Личный сайт, использует шейдеры для анимации фона, и GSAP для анимации отдельных элементов',\r\n                link: 'vasiliy-fedorov.ru',\r\n                features: ['React.js','Webpack','React.js', 'Canvas', 'Three.js', 'WebGl', 'GSAP', 'ScrollMagic', 'SVG', 'SCSS']\r\n            },\r\n            {\r\n                title: 'Secret portfolio',\r\n                description: 'Сайт портфолио с необычной реализацией',\r\n                link: 'pinkipail.github.io/secret-portfolio'\r\n            },\r\n            {\r\n                title: '[DEMO] Project-R',\r\n                description: 'Реализации работы с сервером по REST API, авторизация',\r\n                link: 'pinkipail.github.io/project-r'\r\n            },\r\n            {\r\n                title: '[DEMO] Цифровой пропуск',\r\n                description: 'Создание сайта на React.js',\r\n                link: 'pinkipail.github.io/digital-pass'\r\n            }\r\n        ]\r\n    }\r\n    \r\n    componentDidMount() { \r\n        this.scroll()\r\n    }\r\n    enteringAnimating(){\r\n      TweenMax.fromTo(this.elem, 1, {alpha:0, xPercent: 100}, {alpha:1,xPercent: 0, ease: 'power2.out'}) \r\n      TweenMax.fromTo(this.bg, 1, {alpha:0}, {alpha:1, ease: 'power1.in'}) \r\n      TweenMax.from(this.title, 1, {letterSpacing: '50px', autoRound: false}) \r\n    } \r\n    exitingAnimating(){\r\n      TweenMax.fromTo(this.elem, 1, {xPercent: 0}, {xPercent: -100}) \r\n      TweenMax.fromTo(this.bg, 1, {alpha:1}, {alpha:0}) \r\n    } \r\n\r\n    scroll(){\r\n        const ctrl = new ScrollMagic.Controller()\r\n  \r\n        this.refItemsBg.forEach((item)=>{\r\n            new ScrollMagic.Scene({\r\n                triggerElement: item,\r\n                triggerHook:1\r\n            })\r\n            .setTween(TweenMax.fromTo(item, 1.5, {width: '100%'}, {width: '4px', ease: \"power4.out\"}))\r\n            .addTo(ctrl)    \r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"portfolio page\" ref={(el)=> this.bg = el}>\r\n                <div className=\"portfolio-content\" ref={(el)=> this.elem = el}> \r\n                    <div className='portfolio-content__title'>\r\n                        <div ref={(el)=> this.title = el}>Немного моих работ:</div>\r\n                    </div>\r\n                    {this.content.map((item, idx)=>{\r\n                        return (\r\n                            <div className='portfolio-content-item'ref={(el)=>this.refItems[idx] = el} key={idx}>\r\n                                <div className='portfolio-content-item__bg' ref={(el)=>this.refItemsBg[idx] = el}></div>\r\n                                <div className='portfolio-content-item__title'>\r\n                                    {item.title}\r\n                                </div>\r\n                                <div className='portfolio-content-item__description'>\r\n                                    {item.description}\r\n                                </div>\r\n                                <div className='portfolio-content-item__site'>\r\n                                    <a href={`http://${item.link}`}>{item.link}</a>\r\n                                </div>\r\n                                <div className='portfolio-content-item__features'>\r\n                                {(item.features)? \r\n                                    item.features.map((feature, i, item)=>{ \r\n                                        return (<Fragment key={i}>\r\n                                                <span > {feature}</span>{(i < item.length-1)? ', ':';'}\r\n                                             </Fragment> \r\n                                            )\r\n                                    })\r\n                                    : null}\r\n                                </div>\r\n                        </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"copy-right\">\r\n                  Copyright 2020 by Twenty-Seventh. All rights reserved.\r\n                </div>\r\n          </div>\r\n        \r\n        )\r\n    }\r\n    \r\n}\r\n","import React, { useState } from 'react';\nimport {Route} from 'react-router-dom'\nimport './App.css'\nimport Slider from './Slider/Slider';\nimport Navigation from './Navigation/Navigation';\nimport FilterEffect from './components/FilterEffect/FilterEffect';\nimport About from './About/About';\nimport Logo from './components/Logo/Logo';\nimport Portfolio from './Portfolio/Portfolio';\nimport { CSSTransition } from 'react-transition-group';\n\n\nconst sliderRef = React.createRef()\nconst portfolioRef = React.createRef()\nconst aboutRef = React.createRef()\n\nexport default function(){\n\n  const ruContent = {\n    lang: 'ru',\n    nav: ['домой','портфолио','обо мне'],\n    slidesTexts: [[\n        'Хей, меня',\n        'зoвут Василий',\n    ],[\n        'я фронтенд',  \n        'веб разработчик'\n    ],[\n        'Мне нравится создавать',\n        'интерактивные приложения', \n        'на JavaScript с акцентом на', \n        'анимированный контент.'\n    ],[\n        'люблю работать',\n        'с React и другими',\n        'модными фреймворками'\n    ]]\n\n  }\n  const enContent = {\n    lang: 'en',\n    nav: ['home','portfolio','about'],\n    slidesTexts: [[\n        'Hey, me',\n        'name is Vasily'\n    ],[\n        \"I'm frontend \",  \n        'web developer'\n    ],[\n        'I like creating interactive',\n        'apps In JavaScript with',\n        'emphasis on animated content.'\n    ],[\n        'I love working',\n        'with React and',\n        'others hip frameworks'\n    ]]\n  }\n  const [content, setContent] = useState(ruContent)\n\n  function changeLang(){\n\n    if(content.lang === 'ru'){\n      setContent(enContent)\n    }else{\n      setContent(ruContent)\n    }\n    \n  }\n\n  const routes = [{\n    path:'/',\n    Сomponent: Slider,\n    refComponent: sliderRef,\n    timeout:{\n      appear: 400,\n      enter: 500,\n      exit: 1000\n     }\n  },{\n    path:'/portfolio',\n    Сomponent: Portfolio,\n    refComponent: portfolioRef,\n    timeout:{\n      enter: 100,\n      exit: 1000\n    }\n  },{\n    path:'/about',\n    Сomponent: About,\n    refComponent: aboutRef,\n    timeout:{\n      enter: 100,\n      exit: 1000\n    }\n  }]\n  function addBgGrey(){\n    ['.logo', '.nav-left','.lang'].forEach((className)=>{\n      document.querySelector(className).classList.add('bg-grey')\n    })\n  }\n  function removeBgGrey(){\n    ['.logo', '.nav-left','.lang'].forEach((className)=>{\n      document.querySelector(className).classList.remove('bg-grey')\n    })\n  }\n  return(\n    <React.Fragment>\n        <Logo/>\n        <Navigation \n            links={routes.map((route, idx)=>{\n                return {\n                    path: route.path,\n                    text: content.nav[idx]\n                }\n              })}\n\n        />\n      {routes.map((route, idx)=>\n        <Route path={route.path} exact key={idx}>\n        {({ match }) => (\n              <CSSTransition\n                in={match != null}\n                classNames='page'\n                timeout={route.timeout}\n                onEntered={() => {\n                    route.refComponent.current.enteringAnimating()\n                    if(idx) addBgGrey()\n                }}\n                onExit={()=>{\n                    route.refComponent.current.exitingAnimating()\n                    if(idx) removeBgGrey()\n                }}\n                appear\n                unmountOnExit={idx===0? false: true}\n            >\n                <route.Сomponent \n                    ref={route.refComponent} \n                    lang={content.lang}\n                    slidesTexts={content.slidesTexts}\n                />\n              </CSSTransition>\n            )}\n        </Route>\n      )}\n      {/* <Route path='/' exact>\n      {({ match }) => (\n            <CSSTransition\n              in={match != null}\n              classNames='page'\n              timeout={{\n                appear: 400,\n                enter: 500,\n                exit: 1000\n               }}\n              onEnter={() => {sliderRef.current.enteringAnimating()}}\n              onExit={()=>{sliderRef.current.exitingAnimating()}}\n              appear\n              >\n              <Slider ref={sliderRef}/>\n         \n            </CSSTransition>\n          )}\n      </Route>\n      <Route path='/portfolio'>\n      {({ match }) => (\n            <CSSTransition\n                in={match != null}\n                classNames='page'\n                \n                timeout={{\n                  enter: 100,\n                  exit: 1000\n                }}\n          \n                onEntered={()=> { \n                  portfolioRef.current.enteringAnimating()\n                  addBgGrey()\n                }} \n                onExit={()=>{\n                  portfolioRef.current.exitingAnimating()\n                  removeBgGrey()\n                }} \n                appear\n                unmountOnExit>\n                <Portfolio ref={portfolioRef}/>\n            </CSSTransition>\n          )}\n      </Route>\n      <Route path='/about'>\n      {({ match }) => (\n            <CSSTransition\n                in={match != null}\n                classNames='page'\n                \n                timeout={{\n                  enter: 100,\n                  exit: 1000\n                }}\n           \n                onEntered={()=>aboutRef.current.enteringAnimating()} \n                onExit={()=>aboutRef.current.exitingAnimating()} \n                appear\n                unmountOnExit>\n                <About ref={aboutRef}/>\n            </CSSTransition>\n          )}\n      </Route> */}\n      \n      <FilterEffect/>\n  \n        <div className=\"lang\" onClick={changeLang}>\n          {content.lang}\n        </div>\n\n\n\n    </React.Fragment>\n\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.scss'\nimport './media.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst app =   (\n\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}